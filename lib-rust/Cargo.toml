[package]
name = "hypetrigger"
version = "0.4.1"
edition = "2021"
authors = ["Nathan Babcock <nathan.r.babcock@gmail.com>"]
description = "Perform efficient per-frame operations on streaming video"
homepage = "https://hypetrigger.io"
categories = ["computer-vision", "multimedia", "wasm"]
keywords = ["ffmpeg", "tensorflow", "tesseract", "gpu", "video"]
repository = "https://github.com/nathanbabcock/hypetrigger"
readme = "../README.md"
license = "MIT"

[lib]
crate-type = ["cdylib", "rlib"]

# [[bin]]
# name = "hypetrigger-test"
# path = "src/main.rs"

[features]
default = ["console_error_panic_hook"]
photon = ["dep:photon-rs"]
tesseract = ["photon", "dep:reqwest", "dep:tesseract"]
tensorflow = ["photon", "dep:tensorflow"]
wasm = ["photon"]

[dependencies]
ffmpeg-sidecar = "0.4"
# ffmpeg-sidecar = { path = "../../ffmpeg-sidecar/" }
wasm-bindgen = "=0.2.78"
lazy_static = "1.4.0"
regex = "1.5.5"
image = { version = "0.23.12" } # important to match the version used in `photon-rs`
photon-rs = { version = "0.3.2", optional = true }
reqwest = { version = "0.11.13", optional = true, features = ["blocking"] }
tesseract = { version = "0.13.0", optional = true }
tensorflow = { version = "0.20.0", optional = true }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

[dependencies.web-sys]
version = "0.3"
features = [
  "CanvasRenderingContext2d",
  "ImageData",
  "HtmlCanvasElement",
]
